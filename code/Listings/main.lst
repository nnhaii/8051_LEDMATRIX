C51 COMPILER V9.60.0.0   MAIN                                                              06/09/2023 01:27:01 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include<main.h>
   2          
   3          #include"i2c.h"
   4          
   5          void Send_data_cot(unsigned int _data);
   6          void Send_data_cot_1(unsigned int _data);
   7          void IC2DISPLAY_1(unsigned char d[8], unsigned char r[16]);
   8          void IC2DISPLAY_2(unsigned char d[8], unsigned char r[16]);
   9          //===========================dinh nghia cac chan vao ra======================//
  10          sbit SH_CP = P0^0; //dinh nghia chan SH_CP o P0^0
  11          sbit DS = P0^1; //dinh nghia chan DS o P0^1
  12          sbit ST_CP = P0^2; //dinh nghia chan ST_CP o P0^2
  13          
  14          sbit SH_CP_1 = P0^4; //dinh nghia chan SH_CP o P0^0
  15          sbit DS_1 = P0^6; //dinh nghia chan DS o P0^1
  16          sbit ST_CP_1 = P0^5; //dinh nghia chan ST_CP o P0^2
  17          //============================khai bao bien va hang==========================//
  18          unsigned char t_h[16], t_m[16];
  19          unsigned int b[16] = {
  20            0x0001, 0x0002, 0x0004, 0x0008,
  21            0x0010,
  22            0x0020,
  23            0x0040,
  24            0x0080,
  25            0x0100,
  26            0x0200,
  27            0x0400,
  28            0x0800,
  29            0x1000,
  30            0x2000,
  31            0x4000,
  32            0x8000
  33          };
  34          unsigned char i = 0, k = 0, j = 0;
  35          
  36          #define DS1307_SEC 0x00 //Giay
  37          #define DS1307_MIN 0x01 //Phut
  38          #define DS1307_HOUR 0x02 //Gio
  39          #define DS1307_DAY 0x03 //Thu
  40          #define DS1307_DATE 0x04 //Ngay
  41          #define DS1307_MONTH 0x05 //Thang
  42          #define DS1307_YEAR 0x06 //Nam
  43          
  44          unsigned char sec, min, hour, day, month, year;
  45          
  46          void DS1307_Write(unsigned char addr, unsigned char dat) {
  47   1        unsigned int temp;
  48   1        temp = dat; /*HEX to BCD*/
  49   1        dat = (((dat / 10) * 16) | (temp % 10)); /*for Led 7seg*/
  50   1        I2C_time_start(); /* time_start i2c bus */
  51   1        I2C_write(0XD0); /* Connect to DS1307 */
  52   1        I2C_write(addr); /* Requetime_5 RAM address on DS1307 */
  53   1        I2C_write(dat);
  54   1        I2C_time_stop();
C51 COMPILER V9.60.0.0   MAIN                                                              06/09/2023 01:27:01 PAGE 2   

  55   1      }
  56          unsigned char DS1307_Read(unsigned char addr) {
  57   1        unsigned int tm, ret;
  58   1        I2C_time_start(); /* time_start i2c bus */
  59   1        I2C_write(0xD0); /* Connect to DS1307 */
  60   1        I2C_write(addr); /* Requetime_5 RAM address on DS1307 */
  61   1        I2C_time_start(); /* time_start i2c bus */
  62   1        I2C_write(0XD1); /* Connect to DS1307 for Read */
  63   1        ret = I2C_read(); /* Receive data */
  64   1        I2C_time_stop();
  65   1        tm = ret; /*BCD to HEX*/
  66   1        ret = (((ret / 16) * 10) + (tm & 0x0f)); /*for Led 7seg*/
  67   1        return ret;
  68   1      }
  69          void DS1307_Set() {
  70   1        //Ghi du lieu ngay gio vao DS1307
  71   1        DS1307_Write(DS1307_SEC, sec);
  72   1        DS1307_Write(DS1307_MIN, min);
  73   1        DS1307_Write(DS1307_HOUR, hour);
  74   1        DS1307_Write(DS1307_DATE, day);
  75   1        DS1307_Write(DS1307_MONTH, month);
  76   1        DS1307_Write(DS1307_YEAR, year);
  77   1      }
  78          void DS1307_GetTime() {
  79   1        //Doc du lieu gio tu DS1307
  80   1        hour = DS1307_Read(DS1307_HOUR);
  81   1        min = DS1307_Read(DS1307_MIN);
  82   1        sec = DS1307_Read(DS1307_SEC);
  83   1      }
  84          void DS1307_GetDate() {
  85   1        //Doc du lieu ngay tu DS1307
  86   1        day = DS1307_Read(DS1307_DATE);
  87   1        month = DS1307_Read(DS1307_MONTH);
  88   1        year = DS1307_Read(DS1307_YEAR);
  89   1      } //End code DS1307
  90          //============================HAM MAIN=======================================//
  91          int main() {
  92   1        // Initialize I2C communication
  93   1        while (1) {
  94   2          DS1307_GetTime();
  95   2          hour = DS1307_Read(DS1307_HOUR);
  96   2          min = DS1307_Read(DS1307_MIN);
  97   2      
  98   2          IC2DISPLAY_1(so[hour / 10], t_h);
  99   2          IC2DISPLAY_2(so[hour % 10], t_h);
 100   2          IC2DISPLAY_1(so[min / 10], t_m);
 101   2          IC2DISPLAY_2(so[min % 10], t_m);
 102   2      
 103   2          for (i = 0; i < 16; i++) //quet COT thu 1 den thu 16, cho COT=0 roi goi du lieu ra cot do
 104   2          {
 105   3            P2 = t_h[i]; // goi du kieu ra hang 1->8
 106   3            P1 = t_m[i];
 107   3            Send_data_cot(b[i]); //quet cot
 108   3            Send_data_cot_1(b[i]);
 109   3            delay_ms(1); //thoi gian quet
 110   3            Send_data_cot(0x0000); //tat het led chong lem
 111   3            Send_data_cot_1(0x0000);
 112   3          }
 113   2        }
 114   1      }
 115          
 116          void Send_data_cot(unsigned int _data) {
C51 COMPILER V9.60.0.0   MAIN                                                              06/09/2023 01:27:01 PAGE 3   

 117   1        unsigned char n;
 118   1        unsigned int tam;
 119   1      
 120   1        ST_CP = 0; //cho chan ST cua 74HC595 xuong muc 0
 121   1        SH_CP = 0; //cho chan SH cua 74HC595 xuong muc 0
 122   1        DS = 0; //cho chan DS cua 74HC595 xuong muc 0
 123   1        for (n = 0; n < 16; n++) //goi 16 bit lan luoc ra 16 cot
 124   1        {
 125   2          tam = _data & 0x8000;
 126   2          _data = _data << 1; //dich trai 1 bit de goi bit can goi ra  cot      
 127   2      
 128   2          if (tam == 0x8000) //goi bit cao ra truoc(bit o cot thu 8 truoc)
 129   2          {
 130   3            DS = 1; // cho LED sang COT =1
 131   3          } else {
 132   3            DS = 0; //cho LED tat COT =0
 133   3          }
 134   2          //tao xung dich du lieu   
 135   2          SH_CP = 1;
 136   2          SH_CP = 0;
 137   2        }
 138   1        //tao xung chot du lieu
 139   1        ST_CP = 1;
 140   1        ST_CP = 0;
 141   1      }
 142          
 143          void Send_data_cot_1(unsigned int _data) {
 144   1        unsigned char n;
 145   1        unsigned int tam;
 146   1      
 147   1        ST_CP_1 = 0; //cho chan ST cua 74HC595 xuong muc 0
 148   1        SH_CP_1 = 0; //cho chan SH cua 74HC595 xuong muc 0
 149   1        DS_1 = 0; //cho chan DS cua 74HC595 xuong muc 0
 150   1        for (n = 0; n < 16; n++) //goi 16 bit lan luoc ra 16 cot
 151   1        {
 152   2          tam = _data & 0x8000;
 153   2          _data = _data << 1; //dich trai 1 bit de goi bit can goi ra  cot      
 154   2      
 155   2          if (tam == 0x8000) //goi bit cao ra truoc(bit o cot thu 8 truoc)
 156   2          {
 157   3            DS_1 = 1; // cho LED sang COT =1
 158   3          } else {
 159   3            DS_1 = 0; //cho LED tat COT =0
 160   3          }
 161   2          //tao xung dich du lieu   
 162   2          SH_CP_1 = 1;
 163   2          SH_CP_1 = 0;
 164   2        }
 165   1        //tao xung chot du lieu
 166   1        ST_CP_1 = 1;
 167   1        ST_CP_1 = 0;
 168   1      }
 169          
 170          void IC2DISPLAY_1(unsigned char d[8], unsigned char r[16]) {
 171   1        unsigned char j;
 172   1        for (j = 0; j < 8; j++) {
 173   2          r[j] = d[j];
 174   2        }
 175   1      }
 176          
 177          void IC2DISPLAY_2(unsigned char d[8], unsigned char r[16]) {
 178   1        unsigned char j;
C51 COMPILER V9.60.0.0   MAIN                                                              06/09/2023 01:27:01 PAGE 4   

 179   1        for (j = 0; j < 8; j++) {
 180   2          r[j + 8] = d[j];
 181   2        }
 182   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    653    ----
   CONSTANT SIZE    =     80    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     73      18
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
